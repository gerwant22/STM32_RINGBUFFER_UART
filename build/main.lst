ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_NVIC_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_NVIC_Init:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usart.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "ring_buffer.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** RingBuffer_t ReceiveBuffer;
  47:Core/Src/main.c **** uint8_t ReceiveTmp;
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_NVIC_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****  * @brief  The application entry point.
  64:Core/Src/main.c ****  * @retval int
  65:Core/Src/main.c ****  */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_USART2_UART_Init();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize interrupts */
  93:Core/Src/main.c ****   MX_NVIC_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &ReceiveTmp, 1);
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Infinite loop */
  99:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 100:Core/Src/main.c ****   while (1)
 101:Core/Src/main.c ****   {
 102:Core/Src/main.c ****     HAL_Delay(200);
 103:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****  * @brief System Clock Configuration
 113:Core/Src/main.c ****  * @retval None
 114:Core/Src/main.c ****  */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 121:Core/Src/main.c ****    */
 122:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c ****    */
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     Error_Handler();
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 143:Core/Src/main.c ****    */
 144:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****  * @brief NVIC Configuration.
 158:Core/Src/main.c ****  * @retval None
 159:Core/Src/main.c ****  */
 160:Core/Src/main.c **** static void MX_NVIC_Init(void)
 161:Core/Src/main.c **** {
  28              		.loc 1 161 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 162:Core/Src/main.c ****   /* USART2_IRQn interrupt configuration */
 163:Core/Src/main.c ****   HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
  36              		.loc 1 163 3 view .LVU1
  37 0002 0022     		movs	r2, #0
  38 0004 1146     		mov	r1, r2
  39 0006 2620     		movs	r0, #38
  40 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  41              	.LVL0:
 164:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(USART2_IRQn);
  42              		.loc 1 164 3 view .LVU2
  43 000c 2620     		movs	r0, #38
  44 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  45              	.LVL1:
 165:Core/Src/main.c **** }
  46              		.loc 1 165 1 is_stmt 0 view .LVU3
  47 0012 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE132:
  51              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  52              		.align	1
  53              		.global	HAL_UART_RxCpltCallback
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	HAL_UART_RxCpltCallback:
  59              	.LVL2:
  60              	.LFB133:
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 168:Core/Src/main.c **** HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 169:Core/Src/main.c **** {
  61              		.loc 1 169 1 is_stmt 1 view -0
  62              		.cfi_startproc
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 5


  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
 170:Core/Src/main.c ****   if (huart->Instance == USART2)
  65              		.loc 1 170 3 view .LVU5
  66              		.loc 1 170 12 is_stmt 0 view .LVU6
  67 0000 0268     		ldr	r2, [r0]
  68              		.loc 1 170 6 view .LVU7
  69 0002 084B     		ldr	r3, .L10
  70 0004 9A42     		cmp	r2, r3
  71 0006 00D0     		beq	.L9
  72 0008 7047     		bx	lr
  73              	.L9:
 169:Core/Src/main.c ****   if (huart->Instance == USART2)
  74              		.loc 1 169 1 view .LVU8
  75 000a 10B5     		push	{r4, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     RB_Write(&ReceiveBuffer, ReceiveTmp);
  79              		.loc 1 172 5 is_stmt 1 view .LVU9
  80 000c 064C     		ldr	r4, .L10+4
  81 000e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
  82 0010 0648     		ldr	r0, .L10+8
  83              	.LVL3:
  84              		.loc 1 172 5 is_stmt 0 view .LVU10
  85 0012 FFF7FEFF 		bl	RB_Write
  86              	.LVL4:
 173:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &ReceiveTmp, 1);
  87              		.loc 1 173 5 is_stmt 1 view .LVU11
  88 0016 0122     		movs	r2, #1
  89 0018 2146     		mov	r1, r4
  90 001a 0548     		ldr	r0, .L10+12
  91 001c FFF7FEFF 		bl	HAL_UART_Receive_IT
  92              	.LVL5:
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
  93              		.loc 1 175 1 is_stmt 0 view .LVU12
  94 0020 10BD     		pop	{r4, pc}
  95              	.L11:
  96 0022 00BF     		.align	2
  97              	.L10:
  98 0024 00440040 		.word	1073759232
  99 0028 00000000 		.word	.LANCHOR0
 100 002c 00000000 		.word	.LANCHOR1
 101 0030 00000000 		.word	huart2
 102              		.cfi_endproc
 103              	.LFE133:
 105              		.section	.text.Error_Handler,"ax",%progbits
 106              		.align	1
 107              		.global	Error_Handler
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	Error_Handler:
 113              	.LFB134:
 176:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 6


 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 180:Core/Src/main.c ****  * @retval None
 181:Core/Src/main.c ****  */
 182:Core/Src/main.c **** void Error_Handler(void)
 183:Core/Src/main.c **** {
 114              		.loc 1 183 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ Volatile: function does not return.
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 184:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 185:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 186:Core/Src/main.c ****   __disable_irq();
 120              		.loc 1 186 3 view .LVU14
 121              	.LBB4:
 122              	.LBI4:
 123              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 7


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 8


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 124              		.loc 2 140 27 view .LVU15
 125              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 126              		.loc 2 142 3 view .LVU16
 127              		.syntax unified
 128              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 129 0000 72B6     		cpsid i
 130              	@ 0 "" 2
 131              		.thumb
 132              		.syntax unified
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 9


 133              	.L13:
 134              	.LBE5:
 135              	.LBE4:
 187:Core/Src/main.c ****   while (1)
 136              		.loc 1 187 3 discriminator 1 view .LVU17
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****   }
 137              		.loc 1 189 3 discriminator 1 view .LVU18
 187:Core/Src/main.c ****   while (1)
 138              		.loc 1 187 9 discriminator 1 view .LVU19
 139 0002 FEE7     		b	.L13
 140              		.cfi_endproc
 141              	.LFE134:
 143              		.section	.text.SystemClock_Config,"ax",%progbits
 144              		.align	1
 145              		.global	SystemClock_Config
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	SystemClock_Config:
 151              	.LFB131:
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 152              		.loc 1 116 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 80
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 00B5     		push	{lr}
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 14, -4
 159 0002 95B0     		sub	sp, sp, #84
 160              		.cfi_def_cfa_offset 88
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 161              		.loc 1 117 3 view .LVU21
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162              		.loc 1 117 22 is_stmt 0 view .LVU22
 163 0004 3022     		movs	r2, #48
 164 0006 0021     		movs	r1, #0
 165 0008 08A8     		add	r0, sp, #32
 166 000a FFF7FEFF 		bl	memset
 167              	.LVL6:
 118:Core/Src/main.c **** 
 168              		.loc 1 118 3 is_stmt 1 view .LVU23
 118:Core/Src/main.c **** 
 169              		.loc 1 118 22 is_stmt 0 view .LVU24
 170 000e 0023     		movs	r3, #0
 171 0010 0393     		str	r3, [sp, #12]
 172 0012 0493     		str	r3, [sp, #16]
 173 0014 0593     		str	r3, [sp, #20]
 174 0016 0693     		str	r3, [sp, #24]
 175 0018 0793     		str	r3, [sp, #28]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 176              		.loc 1 122 3 is_stmt 1 view .LVU25
 177              	.LBB6:
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 178              		.loc 1 122 3 view .LVU26
 179 001a 0193     		str	r3, [sp, #4]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 10


 180              		.loc 1 122 3 view .LVU27
 181 001c 1E4A     		ldr	r2, .L20
 182 001e 116C     		ldr	r1, [r2, #64]
 183 0020 41F08051 		orr	r1, r1, #268435456
 184 0024 1164     		str	r1, [r2, #64]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 185              		.loc 1 122 3 view .LVU28
 186 0026 126C     		ldr	r2, [r2, #64]
 187 0028 02F08052 		and	r2, r2, #268435456
 188 002c 0192     		str	r2, [sp, #4]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 189              		.loc 1 122 3 view .LVU29
 190 002e 019A     		ldr	r2, [sp, #4]
 191              	.LBE6:
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 192              		.loc 1 122 3 view .LVU30
 123:Core/Src/main.c **** 
 193              		.loc 1 123 3 view .LVU31
 194              	.LBB7:
 123:Core/Src/main.c **** 
 195              		.loc 1 123 3 view .LVU32
 196 0030 0293     		str	r3, [sp, #8]
 123:Core/Src/main.c **** 
 197              		.loc 1 123 3 view .LVU33
 198 0032 1A4A     		ldr	r2, .L20+4
 199 0034 1168     		ldr	r1, [r2]
 200 0036 41F44041 		orr	r1, r1, #49152
 201 003a 1160     		str	r1, [r2]
 123:Core/Src/main.c **** 
 202              		.loc 1 123 3 view .LVU34
 203 003c 1268     		ldr	r2, [r2]
 204 003e 02F44042 		and	r2, r2, #49152
 205 0042 0292     		str	r2, [sp, #8]
 123:Core/Src/main.c **** 
 206              		.loc 1 123 3 view .LVU35
 207 0044 029A     		ldr	r2, [sp, #8]
 208              	.LBE7:
 123:Core/Src/main.c **** 
 209              		.loc 1 123 3 view .LVU36
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 210              		.loc 1 128 3 view .LVU37
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 211              		.loc 1 128 36 is_stmt 0 view .LVU38
 212 0046 0221     		movs	r1, #2
 213 0048 0891     		str	r1, [sp, #32]
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 214              		.loc 1 129 3 is_stmt 1 view .LVU39
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 215              		.loc 1 129 30 is_stmt 0 view .LVU40
 216 004a 0122     		movs	r2, #1
 217 004c 0B92     		str	r2, [sp, #44]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 218              		.loc 1 130 3 is_stmt 1 view .LVU41
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 219              		.loc 1 130 41 is_stmt 0 view .LVU42
 220 004e 1022     		movs	r2, #16
 221 0050 0C92     		str	r2, [sp, #48]
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 11


 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 222              		.loc 1 131 3 is_stmt 1 view .LVU43
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 223              		.loc 1 131 34 is_stmt 0 view .LVU44
 224 0052 0E91     		str	r1, [sp, #56]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 225              		.loc 1 132 3 is_stmt 1 view .LVU45
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 226              		.loc 1 132 35 is_stmt 0 view .LVU46
 227 0054 0F93     		str	r3, [sp, #60]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 228              		.loc 1 133 3 is_stmt 1 view .LVU47
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 229              		.loc 1 133 30 is_stmt 0 view .LVU48
 230 0056 1092     		str	r2, [sp, #64]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 231              		.loc 1 134 3 is_stmt 1 view .LVU49
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 232              		.loc 1 134 30 is_stmt 0 view .LVU50
 233 0058 4FF4A873 		mov	r3, #336
 234 005c 1193     		str	r3, [sp, #68]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 235              		.loc 1 135 3 is_stmt 1 view .LVU51
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 236              		.loc 1 135 30 is_stmt 0 view .LVU52
 237 005e 0423     		movs	r3, #4
 238 0060 1293     		str	r3, [sp, #72]
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 239              		.loc 1 136 3 is_stmt 1 view .LVU53
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 240              		.loc 1 136 30 is_stmt 0 view .LVU54
 241 0062 1393     		str	r3, [sp, #76]
 137:Core/Src/main.c ****   {
 242              		.loc 1 137 3 is_stmt 1 view .LVU55
 137:Core/Src/main.c ****   {
 243              		.loc 1 137 7 is_stmt 0 view .LVU56
 244 0064 08A8     		add	r0, sp, #32
 245 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 246              	.LVL7:
 137:Core/Src/main.c ****   {
 247              		.loc 1 137 6 view .LVU57
 248 006a 80B9     		cbnz	r0, .L18
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 249              		.loc 1 144 3 is_stmt 1 view .LVU58
 144:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 250              		.loc 1 144 31 is_stmt 0 view .LVU59
 251 006c 0F23     		movs	r3, #15
 252 006e 0393     		str	r3, [sp, #12]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 253              		.loc 1 145 3 is_stmt 1 view .LVU60
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 254              		.loc 1 145 34 is_stmt 0 view .LVU61
 255 0070 0221     		movs	r1, #2
 256 0072 0491     		str	r1, [sp, #16]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 257              		.loc 1 146 3 is_stmt 1 view .LVU62
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 12


 258              		.loc 1 146 35 is_stmt 0 view .LVU63
 259 0074 0023     		movs	r3, #0
 260 0076 0593     		str	r3, [sp, #20]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 261              		.loc 1 147 3 is_stmt 1 view .LVU64
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 262              		.loc 1 147 36 is_stmt 0 view .LVU65
 263 0078 4FF48052 		mov	r2, #4096
 264 007c 0692     		str	r2, [sp, #24]
 148:Core/Src/main.c **** 
 265              		.loc 1 148 3 is_stmt 1 view .LVU66
 148:Core/Src/main.c **** 
 266              		.loc 1 148 36 is_stmt 0 view .LVU67
 267 007e 0793     		str	r3, [sp, #28]
 150:Core/Src/main.c ****   {
 268              		.loc 1 150 3 is_stmt 1 view .LVU68
 150:Core/Src/main.c ****   {
 269              		.loc 1 150 7 is_stmt 0 view .LVU69
 270 0080 03A8     		add	r0, sp, #12
 271 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 272              	.LVL8:
 150:Core/Src/main.c ****   {
 273              		.loc 1 150 6 view .LVU70
 274 0086 20B9     		cbnz	r0, .L19
 154:Core/Src/main.c **** 
 275              		.loc 1 154 1 view .LVU71
 276 0088 15B0     		add	sp, sp, #84
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 4
 279              		@ sp needed
 280 008a 5DF804FB 		ldr	pc, [sp], #4
 281              	.L18:
 282              		.cfi_restore_state
 139:Core/Src/main.c ****   }
 283              		.loc 1 139 5 is_stmt 1 view .LVU72
 284 008e FFF7FEFF 		bl	Error_Handler
 285              	.LVL9:
 286              	.L19:
 152:Core/Src/main.c ****   }
 287              		.loc 1 152 5 view .LVU73
 288 0092 FFF7FEFF 		bl	Error_Handler
 289              	.LVL10:
 290              	.L21:
 291 0096 00BF     		.align	2
 292              	.L20:
 293 0098 00380240 		.word	1073887232
 294 009c 00700040 		.word	1073770496
 295              		.cfi_endproc
 296              	.LFE131:
 298              		.section	.text.main,"ax",%progbits
 299              		.align	1
 300              		.global	main
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	main:
 306              	.LFB130:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 13


  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 307              		.loc 1 67 1 view -0
 308              		.cfi_startproc
 309              		@ Volatile: function does not return.
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 08B5     		push	{r3, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 3, -8
 315              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 316              		.loc 1 75 3 view .LVU75
 317 0002 FFF7FEFF 		bl	HAL_Init
 318              	.LVL11:
  82:Core/Src/main.c **** 
 319              		.loc 1 82 3 view .LVU76
 320 0006 FFF7FEFF 		bl	SystemClock_Config
 321              	.LVL12:
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
 322              		.loc 1 89 3 view .LVU77
 323 000a FFF7FEFF 		bl	MX_GPIO_Init
 324              	.LVL13:
  90:Core/Src/main.c **** 
 325              		.loc 1 90 3 view .LVU78
 326 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 327              	.LVL14:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 328              		.loc 1 93 3 view .LVU79
 329 0012 FFF7FEFF 		bl	MX_NVIC_Init
 330              	.LVL15:
  95:Core/Src/main.c ****   /* USER CODE END 2 */
 331              		.loc 1 95 3 view .LVU80
 332 0016 0122     		movs	r2, #1
 333 0018 0549     		ldr	r1, .L25
 334 001a 0648     		ldr	r0, .L25+4
 335 001c FFF7FEFF 		bl	HAL_UART_Receive_IT
 336              	.LVL16:
 337              	.L23:
 100:Core/Src/main.c ****   {
 338              		.loc 1 100 3 discriminator 1 view .LVU81
 102:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 339              		.loc 1 102 5 discriminator 1 view .LVU82
 340 0020 C820     		movs	r0, #200
 341 0022 FFF7FEFF 		bl	HAL_Delay
 342              	.LVL17:
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 343              		.loc 1 103 5 discriminator 1 view .LVU83
 344 0026 2021     		movs	r1, #32
 345 0028 0348     		ldr	r0, .L25+8
 346 002a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 347              	.LVL18:
 100:Core/Src/main.c ****   {
 348              		.loc 1 100 9 discriminator 1 view .LVU84
 349 002e F7E7     		b	.L23
 350              	.L26:
 351              		.align	2
 352              	.L25:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 14


 353 0030 00000000 		.word	.LANCHOR0
 354 0034 00000000 		.word	huart2
 355 0038 00000240 		.word	1073872896
 356              		.cfi_endproc
 357              	.LFE130:
 359              		.global	ReceiveTmp
 360              		.global	ReceiveBuffer
 361              		.section	.bss.ReceiveBuffer,"aw",%nobits
 362              		.align	2
 363              		.set	.LANCHOR1,. + 0
 366              	ReceiveBuffer:
 367 0000 00000000 		.space	12
 367      00000000 
 367      00000000 
 368              		.section	.bss.ReceiveTmp,"aw",%nobits
 369              		.set	.LANCHOR0,. + 0
 372              	ReceiveTmp:
 373 0000 00       		.space	1
 374              		.text
 375              	.Letext0:
 376              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 377              		.file 4 "c:\\users\\daniel\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 378              		.file 5 "c:\\users\\daniel\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 379              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 380              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 381              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 382              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 383              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 384              		.file 11 "Core/Inc/ring_buffer.h"
 385              		.file 12 "Core/Inc/usart.h"
 386              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 387              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 388              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 389              		.file 16 "Core/Inc/gpio.h"
 390              		.file 17 "<built-in>"
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:20     .text.MX_NVIC_Init:0000000000000000 $t
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:25     .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:52     .text.HAL_UART_RxCpltCallback:0000000000000000 $t
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:58     .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:98     .text.HAL_UART_RxCpltCallback:0000000000000024 $d
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:106    .text.Error_Handler:0000000000000000 $t
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:112    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:144    .text.SystemClock_Config:0000000000000000 $t
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:150    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:293    .text.SystemClock_Config:0000000000000098 $d
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:299    .text.main:0000000000000000 $t
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:305    .text.main:0000000000000000 main
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:353    .text.main:0000000000000030 $d
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:372    .bss.ReceiveTmp:0000000000000000 ReceiveTmp
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:366    .bss.ReceiveBuffer:0000000000000000 ReceiveBuffer
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:362    .bss.ReceiveBuffer:0000000000000000 $d
C:\Users\Daniel\AppData\Local\Temp\cc8XEGSZ.s:373    .bss.ReceiveTmp:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
RB_Write
HAL_UART_Receive_IT
huart2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
HAL_Delay
HAL_GPIO_TogglePin
